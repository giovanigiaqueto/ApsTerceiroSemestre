package widget.listas;

// awt
import java.awt.Dimension;

// swing
import javax.swing.JPanel;
import javax.swing.JScrollBar;

// java util
import java.util.List;

// dao
import dao.MultaDAO;

// modelos
import model.Multa;

// widget
import widget.dados.JDadosMulta;

// suporte
import widget.support.IPanelCRUD;

public class JListaMultas extends javax.swing.JPanel implements IListaDados, IPanelCRUD {
    
    @Override
    public boolean mostrarComoPopup() { return false; }
    
    @Override
    public String getTituloCRUD() { return "Lista de Multas"; }
    
    /**
     * Creates new form JListaLivros
     */
    public JListaMultas() {
        initComponents();
        init();
    }
    
    private void init() {
        Dimension dim = jPanelMultas.getPreferredSize();
        dim.height = 0;
        jPanelMultas.setPreferredSize(dim);
    }
    
    public void inserirMultas(List<Multa> multas) {
        Dimension dim = jPanelMultas.getPreferredSize();
        
        final int w_gap = 10;
        final int h_gap = 10;
        
        for (Multa p : multas) {
            JPanel panel = new JPanel();
            JDadosMulta multa = new JDadosMulta(p);
            panel.add(multa);
            
            Dimension tmp = multa.getPreferredSize();
            tmp.width  += w_gap;
            tmp.height += h_gap;
            panel.setPreferredSize(tmp);
            
            jPanelMultas.add(panel);
            dim.height += tmp.height;
        }
        
        jPanelMultas.setPreferredSize(dim);
        jPanelMultas.revalidate();
    }
    
    // ==================== implements IListaDados ====================
    
    /**
     * carrega as multas do banco na lista se ela estiver vazia e
     * retorna se o conteúdo foi alterado
     * 
     * @return true se o conteúdo da lista for alterado, do contrario false
     */
    @Override
    public boolean carregar() {
        // previne duplicação de dados
        if (jPanelMultas.getComponentCount() > 0) return false;
        
        // carrega os dados
        MultaDAO dao = new MultaDAO();
        inserirMultas(dao.listarMultas());
        return true;
    }
    
    /**
     * carrega mais multas do banco de dados, inserindo-os na lista
     * 
     * @param contagem número de multas para carregar
     */
    @Override
    public void carregar(int contagem) {
        MultaDAO dao = new MultaDAO();
        inserirMultas(dao.listarMultas(this.comprimento(), contagem));
    }
    
    /**
     * remove todos as multas da lista, tornando-a vazia
     */
    @Override
    public void esvaziar() {
        jPanelMultas.removeAll();
        jPanelMultas.setPreferredSize(
            new Dimension(jPanelMultas.getPreferredSize().width, 0)
        );
    }
    
    /**
     * retorna o comprimento da lista em número de multas
     * 
     * @return o comprimento da lista
     */
    @Override
    public int comprimento() {
        return jPanelMultas.getComponentCount();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneMultas = new javax.swing.JScrollPane();
        jPanelMultas = new javax.swing.JPanel();
        jBarraPesquisaSimples1 = new widget.JBarraPesquisaSimples();

        setPreferredSize(new java.awt.Dimension(566, 600));

        jScrollPaneMultas.setMinimumSize(new java.awt.Dimension(537, 22));
        jScrollPaneMultas.setPreferredSize(new java.awt.Dimension(542, 533));

        jPanelMultas.setPreferredSize(new java.awt.Dimension(520, 520));
        jPanelMultas.setLayout(new javax.swing.BoxLayout(jPanelMultas, javax.swing.BoxLayout.Y_AXIS));
        jScrollPaneMultas.setViewportView(jPanelMultas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBarraPesquisaSimples1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPaneMultas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jBarraPesquisaSimples1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneMultas, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.JBarraPesquisaSimples jBarraPesquisaSimples1;
    private javax.swing.JPanel jPanelMultas;
    private javax.swing.JScrollPane jScrollPaneMultas;
    // End of variables declaration//GEN-END:variables
}
